import { ProtobufBroker } from '../modules/proto';
export interface PrivateOrder {
    price: string;
    amount: string;
    side: OrderSide;
    type: OrderType;
    fundingType: FundingType;
    expireTime?: Date;
    id: string;
    timestamp: Date;
    amountFilled: string;
}
export declare type OrderSide = 'buy' | 'sell' | 'unknown';
export declare type FundingType = 'spot' | 'margin';
export declare type OrderType = 'market' | 'limit';
export interface PlaceOrderOpt {
    marketID: number;
    price?: string;
    amount: string;
    side: OrderSide;
    type: OrderType;
    requestID?: string;
}
export interface CancelOrderOpts {
    marketID: number;
    orderID: string;
    requestID?: string;
}
export interface CancelOrderResult {
    marketID: number;
    orderID: string;
}
export declare type BrokerRequest = ProtobufBroker.PlaceOrderRequest | ProtobufBroker.CancelOrderRequest;
export interface BrokerResponse {
    resolution?: ProtobufBroker.RequestResolutionUpdate;
    error?: Error;
}
export interface PriceParam {
    value: number;
    type: ProtobufBroker.PrivateOrder.PriceParamType;
}
export interface PrivateTrade {
    id: string;
    timestamp: Date;
    orderID: string;
    price: string;
    amount: string;
    side: OrderSide;
}
export interface PrivatePosition {
    id: string;
    timestamp: Date;
    side: OrderSide;
    avgPrice: string;
    amountOpen: string;
    amountClosed: string;
    orderIDs: string[];
    tradeIDs: string[];
}

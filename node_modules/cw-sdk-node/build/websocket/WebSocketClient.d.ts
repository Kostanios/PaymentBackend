/// <reference types="node" />
import { EventEmitter } from 'events';
import { ProtobufClient } from './modules/proto';
import { WebSocketOpts } from './types/client';
export default class WebSocketClient extends EventEmitter {
    subscriptions: {
        [key: string]: ProtobufClient.ClientSubscription;
    };
    private conn;
    private opts;
    protected connState: symbol;
    private reconnectTimeout;
    private reconnectDisabled;
    constructor(opts: WebSocketOpts);
    connect(): void;
    error(e: string): void;
    onConnect(fn: () => void): void;
    onDisconnect(fn: () => void): void;
    onStateChange(fn: (s: string) => void): void;
    onError(fn: (e: Error) => void): void;
    send(data: Buffer | Uint8Array): void;
    disconnect(): void;
    state(): symbol;
    getSubscriptions(): ProtobufClient.ClientSubscription[];
    private authenticate;
    private changeState;
    private authResultHandler;
    private reconnect;
}
